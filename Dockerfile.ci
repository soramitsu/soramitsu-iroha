ARG VERSION=latest
FROM ubuntu:$VERSION
ENV DEBIAN_FRONTEND=noninteractive \
    RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH \
    RUST_VERSION=1.60.0

RUN set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        gcc \
        curl \
        clang \
        llvm-dev \
        libc6-dev \
        wget \
        git \
        cmake \
        libstdc++-10-dev \
        libssl-dev \
        zlib1g-dev \
        libxxhash-dev \
        build-essential \
        pkg-config \
    ; \
    dpkgArch="$(dpkg --print-architecture)"; \
    case "${dpkgArch##*-}" in \
        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338' ;; \
        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='67777ac3bc17277102f2ed73fd5f14c51f4ca5963adadf7f174adf4ebc38747b' ;; \
        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='32a1532f7cef072a667bac53f1a5542c99666c4071af0c9549795bbdb2069ec1' ;; \
        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e50d1deb99048bc5782a0200aa33e4eea70747d49dffdc9d06812fd22a372515' ;; \
        *) echo >&2 "unsupported architecture: ${dpkgArch}"; exit 1 ;; \
    esac; \
    url="https://static.rust-lang.org/rustup/archive/1.24.3/${rustArch}/rustup-init"; \
    wget "$url"; \
    echo "${rustupSha256} *rustup-init" | sha256sum -c -; \
    chmod +x rustup-init; \
    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch}; \
    rm rustup-init; \
    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
    rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/rui314/mold.git; \
    git -C "./mold" checkout v1.2.0; \
    make --directory="./mold" CXX=clang++; \
    make --directory="./mold" install; \
    rm -rf "./mold"

RUN rustup component add llvm-tools-preview clippy; \
    rustup install --profile default nightly-2022-04-20; \
    rustup component add rust-src; \
    rustup component add rust-src --toolchain nightly-2022-04-20-x86_64-unknown-linux-gnu; \
    rustup target add wasm32-unknown-unknown; \
    rustup target add wasm32-unknown-unknown --toolchain nightly-2022-04-20; \
    cargo install cargo-lints cargo-nono webassembly-test-runner

RUN curl -fsSL https://get.docker.com -o get-docker.sh; \
    chmod +x get-docker.sh; \
    ./get-docker.sh; \
    rm get-docker.sh


RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose; \
    chmod +x /usr/local/bin/docker-compose

